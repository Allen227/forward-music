{"version":3,"sources":["../external \"react\"","server/request.tsx","server/api.tsx","store/actions/recommend.tsx","store/actions/playlist.tsx","store/actions/audio.tsx","store/actions/rank.tsx","store/actions/song.tsx","store/actions/base.tsx","store/actions/index.tsx","page/home/component/header/index.tsx","component/svg-icon/index.tsx","plugin/audioPlayer/index.ts","page/home/component/footer/index.tsx","page/home/component/left-side/index.tsx","page/home/index.tsx","container/home/index.tsx","router/index.tsx","store/reducers/base.tsx","store/reducers/index.tsx","store/reducers/recommend.tsx","store/reducers/playlist.tsx","store/reducers/audio.tsx","store/reducers/rank.tsx","store/reducers/song.tsx","store/index.tsx","App.tsx","index.tsx","const/index.tsx","plugin/parseTime.ts","plugin/currentTimeContext.ts"],"names":["module","exports","react","fetchUtil","url","method","data","fetch","body","JSON","stringify","then","res","json","server_url","Api","fetch_recommend_tags","req","fetch_recommend_tags_detail","cat","fetch_playlist_detail","playlistId","fetch_song_url","songId","fetch_rank_list","fetch_lyric","fetchRemmendTags","dispatch","server","payload","type","actions","SUCCESS","catch","err","ERROR","fetchRecommendDetail","filteredStack","code","playlists","forEach","item","find","el","id","push","fetchDetailSuccess","fetchPlaylistDetail","START","fetchPlaylistDetailSuccess","fetchPlaylistDetailError","fetchSongUrl","a","songUrlData","songUrl","message","warn","playMusic","actionTypes","PLAY_MUSIC","stopMusic","STOP_MUSIC","loadSource","LOAD_SOURCE","setSource","source","SET_SOURCE","setLoop","SET_LOOP","setStatus","status","SET_STATUS","fetchRankList","fetchLyric","pushPlayTracks","track","deleteInTracks","index","AppHeader","customStyle","className","style","to","activeClassName","SvgIcon","href","event","aria-hidden","onClick","e","stopPropagation","handleEvent","AudioPlayer","this","_instance","loop","Audio","curSongInfo","playTracks","audio","audioPlayer","getInstance","statusClass","useState","volume","setVolume","currentTime","curPlayTime","setPlayTime","isMove","setMoveStatus","timeContext","useContext","currentTimeContext","nextSongIcon","width","height","startMusic","willPlaySong","slideTimeEnd","controlPreOrNext","curSongIdx","findIndex","getPreSongInfo","length","getNextSongInfo","time","ontimeupdate","timeupdate","path","update","useEffect","join","parseTime","onChange","onAfterChange","value","min","max","Math","round","dt","tipFormatter","LeftSide","trackListDom","deleteTrack","historyList","localStorage","getItem","history","useHistory","songInfo","name","picUrl","player","map","key","playCurSong","deleteTrackItem","playListStyle","curSongBoxClass","autoHide","pathname","state","src","alt","Rank","lazy","Song","Detail","Recommend","connect","setTime","screenWidth","setScreenWidth","screenHeight","setScreenHeight","currentTimeBus","homeBgStyle","invalidStyle","isSongRouter","useRouteMatch","document","offsetWidth","offsetHeight","backgroundImage","background","border","color","Provider","fallback","Fragment","from","exact","component","Router","Home","React","combineReducers","recommendTags","action","Object","assign","recommendTagDetail","playlistDetail","parsedSongInfo","localSongInfo","parse","play","pause","setItem","load","SET_PLAY_INDEX","playIndex","songTracks","parsedTracks","inputHistoryTracks","deleteItemInTracks","delIdx","splice","rankList","lyricData","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","App","store","ReactDOM","render","getElementById","FETCH_RECOMMEND_TAGS","FETCH_RECOMMEND_TAG__DETAIL","FETCH_PLAYLIST_DETAIL","FETCH_SONG_URL","FETCH_RANK_LIST","FETCH_LYRIC","MUSIC_PLAYER","CURRENT_TIME","PUSH_TRACKS","DELETE_TRACKS","timestamp","totalSec","seconds","floor","minute","createContext"],"mappings":"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","file":"static/js/main.28df0508.chunk.js","sourcesContent":["module.exports = react;","/**\r\n * @param {String} url 请求的URL\r\n * @param {String} method 请求方法: POST, DELETE, PUT, GET\r\n * @param {Object} data 请求JSON数据\r\n */\r\nfunction fetchUtil (url: string, method: string, data?: object): Promise<object> {\r\n  return fetch(url, {\r\n    method: method,\r\n    body: JSON.stringify(data)\r\n  }).then(res => {\r\n    return res.json();\r\n  })\r\n}\r\n\r\nexport default fetchUtil;","import req from './request';\r\n\r\nconst server_url: string = `http://129.226.190.242:3000`;\r\n\r\nconst Api = {\r\n  fetch_recommend_tags: () => req(`${server_url}/playlist/hot`, 'GET'),\r\n  fetch_recommend_tags_detail: (cat: string) => req(`${server_url}/top/playlist?&cat=${cat}`, 'GET'),\r\n  fetch_playlist_detail: (playlistId: number) => req(`${server_url}/playlist/detail?id=${playlistId}`, 'GET'),\r\n  fetch_song_url: (songId: number) => req(`${server_url}/song/url?id=${songId}`, 'GET'),\r\n  fetch_rank_list: () => req(`${server_url}/toplist`, 'GET'),\r\n  fetch_lyric: (songId: number) => req(`${server_url}/lyric?id=${songId}`, 'GET')\r\n}\r\n\r\nexport default Api;","import { ThunkAction } from 'redux-thunk';\r\nimport { Action } from 'redux';\r\nimport * as actions from '../../const';\r\nimport server from '../../server/api';\r\nimport {requestActionType} from '../../types/index';\r\nimport {recommendTagDetailType, detailType} from '../../types/index';\r\n// fetch recommend tags\r\nconst fetchTagsSuccess= (payload: object): requestActionType => {\r\n  return {\r\n    type: actions.FETCH_RECOMMEND_TAGS.SUCCESS,\r\n    payload\r\n  }\r\n};\r\n\r\nconst fetchTagsError= (payload: object): requestActionType => {\r\n  return {\r\n    type: actions.FETCH_RECOMMEND_TAGS.ERROR,\r\n    payload\r\n  }\r\n};\r\n\r\nconst fetchRemmendTags = (): ThunkAction<void, null, null, Action<string>> => {\r\n  return dispatch => {\r\n    server.fetch_recommend_tags().then(res => {\r\n      dispatch(fetchTagsSuccess(res));\r\n    }).catch(err => {\r\n      dispatch(fetchTagsError(err));\r\n    });\r\n  }\r\n}\r\n// fetch recommend details according to tag selected\r\nconst fetchDetailSuccess= (payload: recommendTagDetailType): requestActionType => {\r\n  let filteredStack: Array<detailType> = [];\r\n  if (payload.code === 200) {\r\n    payload.playlists.forEach((item) => {\r\n      if (!filteredStack.find((el: detailType) => el.id === item.id)) {\r\n        filteredStack.push(item)\r\n      }\r\n    });\r\n }\r\n  return {\r\n    type: actions.FETCH_RECOMMEND_TAG__DETAIL.SUCCESS,\r\n    payload: {\r\n      playlists: filteredStack\r\n    }\r\n  }\r\n};\r\n\r\nconst fetchDetailError= (payload: object): requestActionType => ({\r\n  type: actions.FETCH_RECOMMEND_TAG__DETAIL.ERROR,\r\n  payload\r\n});\r\n\r\nconst fetchRecommendDetail = (cat: string): ThunkAction<void, null, null, Action<string>> => {\r\n  return dispatch => {\r\n    server.fetch_recommend_tags_detail(cat).then((res: object) => {\r\n      dispatch(fetchDetailSuccess(res as recommendTagDetailType));\r\n    }).catch(err => {\r\n      dispatch(fetchDetailError(err));\r\n    })\r\n  }\r\n}\r\n\r\nexport {\r\n  fetchRemmendTags,\r\n  fetchRecommendDetail\r\n}","import { ThunkAction } from 'redux-thunk';\r\nimport { Action } from 'redux';\r\nimport * as actions from '../../const';\r\nimport server from '../../server/api';\r\nimport {message} from 'antd';\r\nimport {requestActionType, playlistDetailType} from '../../types/index';\r\n\r\nconst fetchPlaylistDetailStart = (payload: undefined): requestActionType => {\r\n  return {\r\n    type: actions.FETCH_PLAYLIST_DETAIL.START,\r\n    payload\r\n  }\r\n};\r\n\r\nconst fetchPlaylistDetailSuccess = (payload: playlistDetailType): requestActionType => {\r\n  return {\r\n    type: actions.FETCH_PLAYLIST_DETAIL.SUCCESS,\r\n    payload\r\n  }\r\n};\r\n\r\nconst fetchPlaylistDetailError = (payload: object): requestActionType => ({\r\n  type: actions.FETCH_PLAYLIST_DETAIL.ERROR,\r\n  payload\r\n});\r\n\r\nconst fetchPlaylistDetail = (playlistId: number): ThunkAction<void, null, null, Action<string>> => {\r\n  return dispatch => {\r\n    dispatch(fetchPlaylistDetailStart(void 0));\r\n    server.fetch_playlist_detail(playlistId).then((res: object) => {\r\n      dispatch(fetchPlaylistDetailSuccess(res as playlistDetailType));\r\n    }).catch(err => {\r\n      dispatch(fetchPlaylistDetailError(err));\r\n    })\r\n  }\r\n}\r\n\r\nconst fetchSongUrl = async (songId: number) => {\r\n  const songUrlData: any = await server.fetch_song_url(songId);\r\n  const songUrl = songUrlData.data[0].url;\r\n  if (!songUrl) {\r\n    message.warn('由于版权问题, 该歌曲暂时下架！');\r\n  }\r\n  return songUrl;\r\n}\r\n\r\nexport {\r\n  fetchPlaylistDetail,\r\n  fetchSongUrl\r\n}","import * as actionTypes from '../../const/index';\r\n\r\nexport function playMusic () {\r\n  return {\r\n    type: actionTypes.MUSIC_PLAYER.PLAY_MUSIC,\r\n    payload: true\r\n  }\r\n}\r\n\r\nexport function stopMusic () {\r\n  return {\r\n    type: actionTypes.MUSIC_PLAYER.STOP_MUSIC,\r\n    payload: false\r\n  }\r\n}\r\n\r\nexport function loadSource () {\r\n  return {\r\n    type: actionTypes.MUSIC_PLAYER.LOAD_SOURCE,\r\n    payload: null\r\n  }\r\n}\r\n\r\n\r\nexport function setSource (source: object) {\r\n  return {\r\n    type: actionTypes.MUSIC_PLAYER.SET_SOURCE,\r\n    payload: source\r\n  }\r\n}\r\n\r\nexport function setPlayIndex (index: number) {\r\n  return {\r\n    type: actionTypes.MUSIC_PLAYER.SET_PLAY_INDEX,\r\n    payload: index\r\n  }\r\n}\r\n\r\nexport function setLoop () {\r\n  return {\r\n    type: actionTypes.MUSIC_PLAYER.SET_LOOP\r\n  }\r\n}\r\n\r\nexport function setStatus (status: boolean) {\r\n  return {\r\n    type: actionTypes.MUSIC_PLAYER.SET_STATUS,\r\n    payload: status\r\n  }\r\n}","import { ThunkAction } from 'redux-thunk';\r\nimport { Action } from 'redux';\r\nimport * as actions from '../../const';\r\nimport server from '../../server/api';\r\nimport {requestActionType} from '../../types/index';\r\n\r\nconst fetchRankListError= (payload: object): requestActionType => {\r\n  return {\r\n    type: actions.FETCH_RANK_LIST.ERROR,\r\n    payload\r\n  }\r\n};\r\n\r\nconst fetchRankListSuccess= (payload: object): requestActionType => {\r\n  return {\r\n    type: actions.FETCH_RANK_LIST.SUCCESS,\r\n    payload\r\n  }\r\n};\r\n\r\nconst fetchRankList = (): ThunkAction<void, null, null, Action<string>> => {\r\n  return dispatch => {\r\n    server.fetch_rank_list().then(res => {\r\n      dispatch(fetchRankListSuccess(res));\r\n    }).catch(err => {\r\n      dispatch(fetchRankListError(err));\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  fetchRankList\r\n}","import { ThunkAction } from 'redux-thunk';\r\nimport { Action } from 'redux';\r\nimport * as actions from '../../const';\r\nimport server from '../../server/api';\r\nimport {requestActionType} from '../../types/index';\r\nimport {} from '../../types/index';\r\n// fetch recommend tags\r\nconst fetchLyricSuccess= (payload: object): requestActionType => {\r\n  return {\r\n    type: actions.FETCH_LYRIC.SUCCESS,\r\n    payload\r\n  }\r\n};\r\n\r\nconst fetchLyricError= (payload: object): requestActionType => {\r\n  return {\r\n    type: actions.FETCH_LYRIC.ERROR,\r\n    payload\r\n  }\r\n};\r\n\r\nconst fetchLyric = (songId: number): ThunkAction<void, null, null, Action<string>> => {\r\n  return dispatch => {\r\n    server.fetch_lyric(songId).then(res => {\r\n      dispatch(fetchLyricSuccess(res));\r\n    }).catch(err => {\r\n      dispatch(fetchLyricError(err));\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  fetchLyric\r\n}","import * as actionTypes from '../../const/index';\r\nimport {songTrack} from '../../types/index';\r\n\r\nconst pushPlayTracks = function (track: songTrack) {\r\n  return {\r\n    type: actionTypes.PUSH_TRACKS,\r\n    payload: track\r\n  }\r\n}\r\n\r\nconst deleteInTracks = function (index: number) {\r\n  return {\r\n    type: actionTypes.DELETE_TRACKS,\r\n    payload: index\r\n  }\r\n}\r\n\r\nexport {\r\n  pushPlayTracks,\r\n  deleteInTracks\r\n}","import {fetchRemmendTags, fetchRecommendDetail} from './recommend';\r\nimport {fetchPlaylistDetail, fetchSongUrl} from './playlist';\r\nimport {playMusic, stopMusic, loadSource, setSource, setLoop, setPlayIndex, setStatus} from './audio';\r\nimport {fetchRankList} from './rank';\r\nimport {fetchLyric} from './song';\r\nimport {pushPlayTracks, deleteInTracks} from './base';\r\n\r\nexport {\r\n  fetchRemmendTags,\r\n  fetchRecommendDetail,\r\n  fetchPlaylistDetail,\r\n  fetchSongUrl,\r\n  pushPlayTracks,\r\n  playMusic,\r\n  stopMusic,\r\n  loadSource,\r\n  setSource,\r\n  setLoop,\r\n  setPlayIndex,\r\n  setStatus,\r\n  fetchRankList,\r\n  fetchLyric,\r\n  deleteInTracks\r\n};","import * as React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './style.pcss';\r\n\r\ninterface Props {\r\n  customStyle: object\r\n}\r\n\r\nfunction AppHeader ({customStyle}: Props) {\r\n  return (\r\n    <header className=\"app-header\" style={customStyle}>\r\n      <div className=\"header-bg\"></div>\r\n      <div className=\"header-container\" style={customStyle}>\r\n        <NavLink to=\"recommend\">\r\n          <h1 className=\"app-title\">MOMENT</h1>\r\n        </NavLink>\r\n        <ul className=\"menu-list\">\r\n          <NavLink to=\"/recommend\" className=\"menu-item\" activeClassName=\"active\">\r\n            <li>推荐</li>\r\n          </NavLink>\r\n          <NavLink to=\"/rank\" className=\"menu-item\" activeClassName=\"active\">\r\n            <li>排行榜</li>\r\n          </NavLink>\r\n        </ul>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './style.pcss';\r\n\r\ninterface Props {\r\n  href: string,\r\n  customStyle?: object,\r\n  event: Function\r\n}\r\n\r\nexport default function SvgIcon ({href, customStyle, event}: Props) {\r\n  /**\r\n   * handle event\r\n   * @param e event taget\r\n   */\r\n  function handleEvent (e: React.MouseEvent) {\r\n    e.stopPropagation();\r\n    event();\r\n  }\r\n  return (\r\n    <svg className=\"icon svg-icon\" style={customStyle} aria-hidden=\"true\" onClick={(e: React.MouseEvent) => handleEvent(e)}>\r\n      <use href={`#${href}`}/>\r\n    </svg>\r\n  )\r\n}\r\n","/**\r\n * AudioPlayer\r\n */\r\nexport default class AudioPlayer {\r\n  private static _instance: HTMLMediaElement = new Audio();\r\n  /**\r\n   * get single instance\r\n   */\r\n  public static getInstance () {\r\n    // default loop mode\r\n    this._instance.loop = true;\r\n    return this._instance;\r\n  }\r\n}","import React, {useState, useEffect, useContext} from 'react';\r\nimport './style.pcss';\r\nimport SvgIcon from '../../../../component/svg-icon';\r\nimport {curSongInfoType, songTrack} from '../../../../types/index';\r\nimport { Slider } from 'antd';\r\nimport {audioPlayer, parseTime} from '../../../../plugin/index';\r\nimport {currentTimeContext} from '../../../../plugin/currentTimeContext';\r\n\r\ninterface Props {\r\n  status: boolean,\r\n  curSongInfo: curSongInfoType,\r\n  playTracks: Array<songTrack>,\r\n  stopMusic: Function,\r\n  playMusic: Function,\r\n  setSource: Function,\r\n  setStatus: Function,\r\n  fetchSongUrl: Function,\r\n  fetchLyric: Function,\r\n  customStyle: object\r\n}\r\n\r\nfunction AppHeader ({customStyle, setStatus, status, stopMusic, playMusic, curSongInfo, playTracks, fetchSongUrl, setSource, fetchLyric}: Props) {\r\n  const audio = audioPlayer.getInstance();\r\n  let statusClass = ['play-icon'];\r\n  if (status) {\r\n    statusClass.push('active');\r\n  }\r\n  let [volume, setVolume] = useState(audio.volume * 100);\r\n  let [curPlayTime, setPlayTime] = useState(audio.currentTime);\r\n  let [isMove, setMoveStatus] = useState(false);\r\n  let timeContext = useContext(currentTimeContext);\r\n  const nextSongIcon: object = {\r\n    width: 32,\r\n    height: 32,\r\n  }\r\n  const volumeIconStyle = {\r\n    width: 20,\r\n    height: 20\r\n  }\r\n  // listen audio time\r\n  audio.ontimeupdate = function (timeupdate: any) {\r\n    if (!isMove) {\r\n      const currentTime = timeupdate.path[0].currentTime;\r\n      setPlayTime(currentTime);\r\n      timeContext.update(currentTime);\r\n    }\r\n  }\r\n  // initial effect\r\n  /* eslint-disable */\r\n  useEffect(() => {\r\n    // initial volume\r\n    audio.volume = 0.25;\r\n    setVolume(audio.volume * 100);\r\n  }, [])\r\n  /* eslint-disable */\r\n  useEffect(() => {\r\n    if (curSongInfo && curSongInfo.id) {\r\n      fetchLyric(curSongInfo.id);\r\n    }\r\n  }, [curSongInfo.id]);\r\n\r\n  async function startMusic (willPlaySong: songTrack | undefined, curPlayTime: number) {\r\n    if (willPlaySong) {\r\n      const songUrl = await fetchSongUrl(willPlaySong.id);\r\n      // update new source\r\n      willPlaySong.source = songUrl;\r\n      setSource(willPlaySong);\r\n      if (curPlayTime) {\r\n        slideTimeEnd(curPlayTime);\r\n      }\r\n      playMusic();\r\n      setStatus(true);\r\n    }\r\n  }\r\n  /**\r\n   * control player\r\n   */\r\n   function switchPlayer () {\r\n    if (status) {\r\n      stopMusic();\r\n    } else {\r\n      startMusic(curSongInfo, curPlayTime);\r\n    }\r\n  }\r\n  /**\r\n   * get index of current song from song tracks\r\n   */\r\n  function getCurrentSongIndex () {\r\n    return playTracks.findIndex(el => el.id === curSongInfo.id);\r\n  }\r\n  /**\r\n   * play pre song\r\n   * @param curSongIdx current index of song\r\n   */\r\n  function getPreSongInfo (curSongIdx: number) {\r\n    if (curSongIdx > 0) {\r\n      return playTracks[curSongIdx - 1];\r\n    }\r\n  }\r\n  /**\r\n   * play next song\r\n   * @param curSongIdx current index of song\r\n   */\r\n  function getNextSongInfo (curSongIdx: number) {\r\n    if (curSongIdx < playTracks.length - 1) {\r\n      return playTracks[curSongIdx + 1];\r\n    }\r\n  }\r\n  // control previous or next\r\n  function controlPreOrNext (type: number) {\r\n    let curSongIdx = getCurrentSongIndex();\r\n    let willPlaySong: songTrack | undefined ;\r\n    if (type === -1) {\r\n      willPlaySong = getPreSongInfo(curSongIdx)\r\n    } else if (type === 1) {\r\n      willPlaySong = getNextSongInfo(curSongIdx);\r\n    }\r\n    startMusic(willPlaySong, 0)\r\n  }\r\n  /**\r\n   * set value that is slide bar of time\r\n   * @param time select time\r\n   */\r\n  function slideTime (time: any) {\r\n    setMoveStatus(true);\r\n    setPlayTime(time);\r\n  }\r\n  /**\r\n   * slide end event\r\n   * @param time time that is slide end\r\n   */\r\n  function slideTimeEnd (time: any) {\r\n    setMoveStatus(false);\r\n    setPlayTime(time);\r\n    audio.currentTime = time;\r\n  }\r\n  // set volume\r\n  function changeVolumn (volume: any) {\r\n    setVolume(volume);\r\n    audio.volume = volume / 100;\r\n  }\r\n\r\n  return (\r\n    <footer className=\"app-footer\" style={customStyle}>\r\n      <div className=\"footer-bg\"></div>\r\n      <div className=\"footer-container\">\r\n        <div className=\"player-control\">\r\n          <SvgIcon href=\"iconshangyige\" customStyle={nextSongIcon} event={() => controlPreOrNext(-1)}/>\r\n          <div className=\"play-btn\" onClick={switchPlayer}>\r\n            <div className={statusClass.join(' ')}></div>\r\n          </div>\r\n          <SvgIcon href=\"iconxiayige\" customStyle={nextSongIcon} event={() => controlPreOrNext(1)}/>\r\n        </div>\r\n        <div className=\"time-bar\">\r\n          <span className=\"slide-time\">{parseTime(curPlayTime * 1000)}</span>\r\n          <Slider onChange={slideTime} onAfterChange={slideTimeEnd} value={curPlayTime} min={0} max={Math.round(curSongInfo.dt / 1e3)} tipFormatter={null}/>\r\n          <span className=\"slide-time\">{parseTime(curSongInfo.dt)}</span>\r\n        </div>\r\n        <div className=\"volume-bar\">\r\n          <SvgIcon href=\"iconyinliang\" customStyle={volumeIconStyle} event={() => {}}></SvgIcon>\r\n          <Slider onChange={changeVolumn} min={0} max={100} onAfterChange={() => playMusic()} value={volume} tipFormatter={null}/>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './style.pcss';\r\nimport {songTrack, curSongInfoType} from '../../../../types/index';\r\nimport parseTime from '../../../../plugin/parseTime';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport SvgIcon from '../../../../component/svg-icon';\r\nimport {useHistory} from 'react-router-dom';\r\ninterface Props {\r\n  curSongInfo: curSongInfoType,\r\n  playMusic: Function,\r\n  loadSource: Function,\r\n  setSource: Function,\r\n  setStatus: Function,\r\n  fetchSongUrl: Function,\r\n  customStyle: object,\r\n  playTracks: Array<songTrack>,\r\n  deleteTrack: Function\r\n}\r\n\r\nfunction LeftSide ({deleteTrack, curSongInfo, fetchSongUrl, loadSource, setSource, setStatus, playMusic, customStyle, playTracks}: Props) {\r\n  const historyList = localStorage.getItem('songTracks');\r\n  let trackListDom;\r\n  const history = useHistory();\r\n  /**\r\n   * play current song\r\n   * @param track the song information that will play\r\n   */\r\n  async function playCurSong (track: any) {\r\n    const songUrl = await fetchSongUrl(track.id);\r\n    if (!!songUrl) {\r\n      const songInfo = {\r\n        id: track.id,\r\n        name: track.name,\r\n        picUrl: track.picUrl,\r\n        source: songUrl,\r\n        player: track.player,\r\n        dt: track.dt\r\n      };\r\n      setSource(songInfo);\r\n      loadSource();\r\n      playMusic();\r\n      setStatus(true);\r\n    }\r\n  }\r\n  /**\r\n   * delete item in history list\r\n   * @param index delete index\r\n   */\r\n  function deleteTrackItem (index: number) {\r\n    deleteTrack(index);\r\n  }\r\n  // get tracks node when historyList is valid\r\n  if (historyList) {\r\n    trackListDom = playTracks.map((track: songTrack, index: number) => {\r\n      return (\r\n        <li className=\"list-item\" key={track.id} onClick={() => {playCurSong(track)}}>\r\n          <span className=\"song-name text-overflow\">{track.name}</span>\r\n          <span className=\"song-time\">{parseTime(track.dt)}</span>\r\n          <SvgIcon href=\"iconlajitong\" event={() => {deleteTrackItem(index)}}/>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n  let curSongBoxClass = ['cur-music-box'];\r\n  let playListStyle;\r\n  if (!!curSongInfo.id) {\r\n    curSongBoxClass.push('active');\r\n  } else {\r\n    playListStyle = {\r\n      height: 'calc(100% - 40px)'\r\n    }\r\n  }\r\n  function jumpSongPage () {\r\n    history.push({\r\n      pathname: '/song',\r\n      state: {\r\n        id: curSongInfo.id\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <aside className=\"left-side\" style={customStyle}>\r\n      <h2 className=\"title\" style={customStyle}>播放列表</h2>\r\n      <div className=\"track-container\" style={playListStyle}>\r\n        <Scrollbars style={{ width: '100%', height: '100%' }} autoHide>\r\n          <ul className=\"track-list\">\r\n            {trackListDom}\r\n          </ul>\r\n        </Scrollbars>\r\n      </div>\r\n      <div className={curSongBoxClass.join(' ')} style={customStyle}>\r\n        <SvgIcon href=\"iconfangda\" event={jumpSongPage}/>\r\n        <img className=\"music-img\" src={`${curSongInfo.picUrl}?param=60y60`} alt=\"song-cover\"></img>\r\n        <div className=\"music-info\">\r\n          <h3 className=\"music-title text-overflow\">{curSongInfo.name}</h3>\r\n          <span className=\"music-time\" style={customStyle}>{curSongInfo.player}&nbsp;&nbsp;&nbsp;{parseTime(curSongInfo.dt)}</span>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default LeftSide;","import React, {useState, useEffect, Suspense, lazy} from 'react';\r\nimport {Route, Switch, Redirect, useRouteMatch} from 'react-router-dom';\r\nimport AppHeader from './component/header';\r\nimport AppFooter from './component/footer';\r\nimport LeftSide from './component/left-side';\r\n\r\nimport {curSongInfoType, songTrack} from '../../types/index';\r\nimport {currentTime, currentTimeContext} from '../../plugin/currentTimeContext';\r\nimport './style.pcss';\r\n\r\nconst Rank = lazy(() => import('../../container/rank/index'));\r\nconst Song = lazy(() => import('../../container/song/index'));\r\nconst Detail = lazy(() => import('../../container/detail'));\r\nconst Recommend = lazy(() => import('../../container/recommend/index'));\r\ninterface Props {\r\n  playTracks: Array<songTrack>,\r\n  curSongInfo: curSongInfoType,\r\n  playMusic: Function,\r\n  stopMusic: Function,\r\n  loadSource: Function,\r\n  setSource: Function,\r\n  setStatus: Function,\r\n  fetchSongUrl: Function,\r\n  fetchLyric: Function,\r\n  deleteTrack: Function\r\n}\r\nexport default function Home({setStatus, curSongInfo, stopMusic, playMusic, playTracks, loadSource, setSource, fetchSongUrl, fetchLyric, deleteTrack}: Props) {\r\n  const [time, setTime] = useState(currentTime);\r\n  const [screenWidth, setScreenWidth] = useState(0);\r\n  const [screenHeight, setScreenHeight] = useState(0);\r\n  function updateCurrentTime (time: any) {\r\n    setTime(time);\r\n  }\r\n  // mounted on state for response update\r\n  const currentTimeBus: any = {\r\n    value: time,\r\n    update: updateCurrentTime\r\n  }\r\n  let homeBgStyle = {};\r\n  let invalidStyle = {};\r\n  const isSongRouter = !!useRouteMatch('/song');\r\n  useEffect(() => {\r\n    setScreenWidth(document.body.offsetWidth / 3.9);\r\n    setScreenHeight(document.body.offsetHeight / 3.9);\r\n  }, []);\r\n  // set style on song page\r\n  if (isSongRouter && screenWidth && screenHeight) {\r\n    homeBgStyle = {\r\n      backgroundImage: `url(${curSongInfo.picUrl}?param=${screenWidth}y${screenHeight})`\r\n    };\r\n    invalidStyle = {\r\n      background: 'none',\r\n      border: 'none',\r\n      color: 'white'\r\n    };\r\n  }\r\n  return (\r\n    <currentTimeContext.Provider value={currentTimeBus}>\r\n      <div className=\"mask home-bg\" style={homeBgStyle}></div>\r\n      <div className=\"mask home-fg\"></div>\r\n      <div className=\"home\">\r\n        <AppHeader customStyle={invalidStyle}/>\r\n        <main className=\"app-main\" style={invalidStyle}>\r\n          <LeftSide deleteTrack={deleteTrack} playTracks={playTracks} customStyle={invalidStyle} curSongInfo={curSongInfo} playMusic={playMusic} loadSource={loadSource} setSource={setSource} setStatus={setStatus} fetchSongUrl={fetchSongUrl}></LeftSide>\r\n            <article className=\"container\" style={invalidStyle}>\r\n              <Suspense fallback={<React.Fragment></React.Fragment>}>\r\n                <Switch>\r\n                  <Redirect from=\"/\" exact to=\"/recommend\" />\r\n                  <Route path=\"/recommend\" component={Recommend} exact></Route>\r\n                  <Route path={`/recommend/detail`} component={Detail}></Route>\r\n                  <Route path={`/rank/detail`} component={Detail}></Route>\r\n                  <Route path=\"/rank\" component={Rank} exact></Route>\r\n                  <Route path=\"/song\" component={Song} exact></Route>\r\n                </Switch>\r\n              </Suspense>\r\n            </article>\r\n        </main>\r\n        <AppFooter customStyle={invalidStyle} status={curSongInfo.status} stopMusic={stopMusic} playMusic={playMusic} playTracks={playTracks} curSongInfo={curSongInfo} setSource={setSource} setStatus={setStatus} fetchSongUrl={fetchSongUrl} fetchLyric={fetchLyric}></AppFooter>\r\n      </div>\r\n    </currentTimeContext.Provider>\r\n  )\r\n};\r\n","import {connect} from 'react-redux';\r\nimport Home from '../../page/home/index';\r\nimport * as actions from '../../store/actions';\r\n\r\nexport function mapStateToProps(state: object) {\r\n  return state;\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch: any) {\r\n  return {\r\n    loadSource: () => dispatch(actions.loadSource()),\r\n    setSource: (source: object) => dispatch(actions.setSource(source)),\r\n    stopMusic: () => dispatch(actions.stopMusic()),\r\n    playMusic: () => dispatch(actions.playMusic()),\r\n    setStatus: (status: boolean) => dispatch(actions.setStatus(status)),\r\n    fetchSongUrl: async (songId: number) => await actions.fetchSongUrl(songId),\r\n    fetchLyric: (songId: number) => dispatch(actions.fetchLyric(songId)),\r\n    deleteTrack: (index: number) => dispatch(actions.deleteInTracks(index))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import * as React from 'react';\r\nimport Home from '../container/home/index';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n\r\nclass Router extends React.Component {\r\n  render () {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={Home}></Route>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Router;","import * as actionTypes  from '../../const/index';\r\nimport {songTrack, requestActionType} from '../../types/index';\r\n\r\nconst playTracks = function (state: Array<object> = [], action: any) {\r\n  const songTracks = localStorage.getItem('songTracks');\r\n  let parsedTracks: any[] = [];\r\n  if (songTracks) {\r\n    parsedTracks = JSON.parse(songTracks);\r\n    state = parsedTracks;\r\n  }\r\n  /**\r\n   * push tracks stack on history list\r\n   * @param songInfo the song will push\r\n   */\r\n  function inputHistoryTracks (songInfo: songTrack) {\r\n    if (!parsedTracks.find((track: songTrack) => track.id === songInfo.id)) {\r\n      parsedTracks.push(songInfo);\r\n    }\r\n    localStorage.setItem('songTracks', JSON.stringify(parsedTracks));\r\n    return parsedTracks\r\n  }\r\n  /**\r\n   * delete song in history list\r\n   * @param delIdx delete index of song\r\n   */\r\n  function deleteItemInTracks (delIdx: number) {\r\n    parsedTracks.splice(delIdx, 1);\r\n    localStorage.setItem('songTracks', JSON.stringify(parsedTracks));\r\n    return parsedTracks;\r\n  }\r\n\r\n  switch(action.type) {\r\n    case actionTypes.PUSH_TRACKS:\r\n      return inputHistoryTracks(action.payload);\r\n    case actionTypes.DELETE_TRACKS:\r\n      return deleteItemInTracks(action.payload);\r\n  }\r\n  return state;\r\n}\r\n\r\nconst songUrl = (state: object = {}, action: requestActionType): object => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_SONG_URL.SUCCESS:\r\n      return Object.assign({}, state, action.payload);\r\n  }\r\n  return state;\r\n};\r\n\r\nexport {\r\n  playTracks,\r\n  songUrl\r\n}","import {combineReducers} from 'redux';\r\nimport {recommendTags, recommendTagDetail} from './recommend';\r\nimport {playlistDetail} from './playlist';\r\nimport {curSongInfo} from './audio';\r\nimport {playTracks, songUrl} from './base';\r\nimport {rankList} from './rank';\r\nimport {lyricData} from './song';\r\n\r\nexport default combineReducers({\r\n  recommendTags,\r\n  recommendTagDetail,\r\n  playlistDetail,\r\n  songUrl,\r\n  curSongInfo,\r\n  playTracks,\r\n  rankList,\r\n  lyricData\r\n});","import * as actionTypes from '../../const';\r\nimport {requestActionType} from '../../types';\r\n\r\n\r\nconst recommendTags = (state: object = {}, action: requestActionType): object => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_RECOMMEND_TAGS.SUCCESS:\r\n      return Object.assign({}, state, action.payload);\r\n  }\r\n  return state;\r\n};\r\n\r\nconst recommendTagDetail = (state: object = {}, action: requestActionType): object => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_RECOMMEND_TAG__DETAIL.SUCCESS:\r\n      return Object.assign({}, state, action.payload);\r\n  }\r\n  return state;\r\n};\r\n\r\nexport {\r\n  recommendTags,\r\n  recommendTagDetail\r\n};","import * as actionTypes from '../../const';\r\nimport {requestActionType} from '../../types';\r\n\r\nconst playlistDetail = (state: object = {}, action: requestActionType): object | undefined => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_PLAYLIST_DETAIL.SUCCESS:\r\n      return Object.assign({}, state, action.payload);\r\n    case actionTypes.FETCH_PLAYLIST_DETAIL.START:\r\n      return {};\r\n  }\r\n  return state;\r\n};\r\n\r\nexport {\r\n  playlistDetail\r\n};","import * as actionTypes  from '../../const/index';\r\nimport audioPlayer from '../../plugin/audioPlayer';\r\n\r\nfunction curSongInfo (state: object = {}, action: any) {\r\n  const audio = audioPlayer.getInstance();\r\n  const localSongInfo = localStorage.getItem('curSongInfo');\r\n  let parsedSongInfo;\r\n  if (localSongInfo) {\r\n    parsedSongInfo = JSON.parse(localSongInfo);\r\n  }\r\n\r\n  switch(action.type) {\r\n    case actionTypes.MUSIC_PLAYER.PLAY_MUSIC:\r\n      // set default song source\r\n      if (!audio.src && localSongInfo) {\r\n        audio.src = parsedSongInfo.source;\r\n      }\r\n      audio.play().catch(() => {});\r\n      return Object.assign({}, state, {status: action.payload});\r\n    case actionTypes.MUSIC_PLAYER.STOP_MUSIC:\r\n      audio.pause();\r\n      return Object.assign({}, state, {status: action.payload});\r\n    case actionTypes.MUSIC_PLAYER.SET_SOURCE:\r\n      audio.src = action.payload.source;\r\n      localStorage.setItem('curSongInfo', JSON.stringify(action.payload));\r\n      return Object.assign({}, state, action.payload)\r\n    case actionTypes.MUSIC_PLAYER.LOAD_SOURCE:\r\n      audio.load();\r\n    break;\r\n    case actionTypes.MUSIC_PLAYER.SET_PLAY_INDEX:\r\n      return Object.assign({}, state, {playIndex: action.payload});\r\n    case actionTypes.MUSIC_PLAYER.SET_STATUS:\r\n        return Object.assign({}, state, {status: action.payload});\r\n  }\r\n  return Object.assign({}, state, parsedSongInfo);\r\n}\r\n\r\nexport {\r\n  curSongInfo\r\n}","import * as actionTypes from '../../const';\r\nimport {requestActionType} from '../../types';\r\n\r\nconst rankList = (state: object = {}, action: requestActionType): object => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_RANK_LIST.SUCCESS:\r\n      return Object.assign({}, state, action.payload);\r\n  }\r\n  return state;\r\n};\r\n\r\nexport {\r\n  rankList\r\n};","import * as actionTypes from '../../const';\r\nimport {requestActionType} from '../../types';\r\n\r\n\r\nconst lyricData = (state: object = {}, action: requestActionType): object => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_LYRIC.SUCCESS:\r\n      return Object.assign({}, state, action.payload);\r\n  }\r\n  return state;\r\n};\r\n\r\nexport {\r\n  lyricData\r\n};","import {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport default createStore (\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)","import * as React from 'react';\r\nimport Router from './router';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router/>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style.pcss';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","// REQUEST RECOMMEND TAGS\r\nexport const FETCH_RECOMMEND_TAGS = {\r\n  SUCCESS: 'FETCH_RECOMMEND_TAGS_SUCCESS',\r\n  ERROR: 'FETCH_RECOMMEND_TAGS_ERROR'\r\n};\r\nexport type FETCH_RECOMMEND_TAGS_SUCCESS = typeof FETCH_RECOMMEND_TAGS.SUCCESS;\r\nexport type FETCH_RECOMMEND_TAGS_ERROR = typeof FETCH_RECOMMEND_TAGS.ERROR;\r\n\r\n// REQUEST RECOMMEND DETAIL ACCORDING TO TAG\r\nexport const FETCH_RECOMMEND_TAG__DETAIL = {\r\n  SUCCESS: 'FETCH_RECOMMEND_DETAIL_TAGS_SUCCESS',\r\n  ERROR: 'FETCH_RECOMMEND_DETAIL_TAGS_ERROR'\r\n};\r\nexport type FETCH_RECOMMEND_DETAIL_SUCCESS = typeof FETCH_RECOMMEND_TAG__DETAIL.SUCCESS;\r\nexport type FETCH_RECOMMEND_DETAIL_ERROR = typeof FETCH_RECOMMEND_TAG__DETAIL.ERROR;\r\n\r\nexport const FETCH_PLAYLIST_DETAIL = {\r\n  START: 'FETCH_PLAYLIST_DETAIL_START',\r\n  SUCCESS: 'FETCH_PLAYLIST_DETAIL_SUCCESS',\r\n  ERROR: 'FETCH_PLAYLIST_DETAIL_ERROR'\r\n};\r\nexport type FETCH_PLAYLIST_DETAIL_SUCCESS = typeof FETCH_PLAYLIST_DETAIL.SUCCESS;\r\nexport type FETCH_PLAYLIST_DETAIL_ERROR = typeof FETCH_PLAYLIST_DETAIL.ERROR;\r\n\r\nexport const FETCH_SONG_URL = {\r\n  SUCCESS: 'FETCH_SONG_URL_SUCCESS',\r\n  ERROR: 'FETCH_SONG_URL_ERROR'\r\n};\r\nexport type FETCH_SONG_URL_SUCCESS = typeof FETCH_SONG_URL.SUCCESS;\r\nexport type FETCH_SONG_URL_ERROR = typeof FETCH_SONG_URL.ERROR;\r\n\r\n// FETCH RANK LIST\r\nexport const FETCH_RANK_LIST = {\r\n  SUCCESS: 'FFETCH_RANK_LIST_SUCCESS',\r\n  ERROR: 'FETCH_RANK_LIST_ERROR'\r\n};\r\nexport type FETCH_RANK_LIST_SUCCESS = typeof FETCH_RANK_LIST.SUCCESS;\r\nexport type FETCH_RANK_LIST_ERROR = typeof FETCH_RANK_LIST.ERROR;\r\n\r\n// FETCH LYRIC\r\nexport const FETCH_LYRIC = {\r\n  SUCCESS: 'FETCH_LYRIC_SUCCESS',\r\n  ERROR: 'FETCH_LYRIC_ERROR'\r\n};\r\nexport type FETCH_LYRIC_SUCCESS = typeof FETCH_LYRIC.SUCCESS;\r\nexport type FETCH_LYRIC_ERROR = typeof FETCH_LYRIC.ERROR;\r\n\r\n// PLAY CONTROL STATE\r\nexport const MUSIC_PLAYER = {\r\n  PLAY_MUSIC: 'PLAY_MUSIC',\r\n  STOP_MUSIC: 'STOP_MUSIC',\r\n  SET_SOURCE: 'SET_SOURCE',\r\n  LOAD_SOURCE: 'LOAD_SOURCE',\r\n  SET_LOOP: 'SET_LOOP',\r\n  SET_PLAY_INDEX: 'SET_PLAY_INDEX',\r\n  SET_STATUS: 'SET_STATUS',\r\n  CURRENT_TIME: 'CURRENT_TIME'\r\n}\r\n\r\nexport type PLAY_MUSIC = typeof MUSIC_PLAYER.PLAY_MUSIC;\r\nexport type STOP_MUSIC = typeof MUSIC_PLAYER.STOP_MUSIC;\r\nexport type SET_SOURCE = typeof MUSIC_PLAYER.SET_SOURCE;\r\nexport type LOAD_SOURCE = typeof MUSIC_PLAYER.LOAD_SOURCE;\r\nexport type SET_LOOP = typeof MUSIC_PLAYER.SET_LOOP;\r\nexport type SET_PLAY_INDEX = typeof MUSIC_PLAYER.SET_PLAY_INDEX;\r\nexport type SET_STATUS = typeof MUSIC_PLAYER.SET_STATUS;\r\n// PUSH SONG INTO TRACKS\r\nexport const PUSH_TRACKS = 'PUSH_TRACKS'\r\nexport type PUSH_TRACKS = typeof PUSH_TRACKS;\r\n\r\n// DELETE SONG IN TRACKS\r\nexport const DELETE_TRACKS = 'DELETE_TRACKS'\r\nexport type DELETE_TRACKS = typeof DELETE_TRACKS;\r\n","export default function parseTime (timestamp: number) {\r\n  // filter timestamp that is undefined\r\n  if (!timestamp) timestamp = 0;\r\n  const totalSec = timestamp / 1e3;\r\n  const seconds = Math.floor(totalSec % 60);\r\n  const minute = Math.floor(totalSec / 60);\r\n  const result = `${minute < 10 ? '0' + minute : minute}:${seconds < 10 ? '0' + seconds : seconds}`;\r\n  return result;\r\n}","/** currentTime Context */\r\nimport React from 'react';\r\n\r\nexport let currentTime = {\r\n  value: 0,\r\n  update: (time: any) => {}\r\n}; \r\n\r\nexport const currentTimeContext = React.createContext(currentTime)"],"sourceRoot":""}